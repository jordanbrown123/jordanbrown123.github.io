DROP DATABASE IF EXISTS ITAS288_Assignment05_Brown_Kaczynski_Wiersma; CREATE DATABASE IF NOT EXISTS ITAS288_Assignment05_Brown_Kaczynski_Wiersma; use ITAS288_Assignment05_Brown_Kaczynski_Wiersma;

DROP TABLE IF EXISTS Person_BACKUP;
CREATE TABLE IF NOT EXISTS Person_BACKUP (
PersonID INT NOT NULL AUTO_INCREMENT,
PersonRole Char(30) NOT NULL,
FirstName Char(50) NOT NULL,
LastName Char(50) NOT NULL,
Address Char(35) NOT NULL,
Birthday date NOT NULL,
PhoneNumber Char(15) NOT NULL,
PRIMARY KEY(PersonID)
)AUTO_INCREMENT=0;

DROP TABLE IF EXISTS Person;
CREATE TABLE IF NOT EXISTS Person (
PersonID INT NOT NULL AUTO_INCREMENT,
PersonRole Char(30) NOT NULL,
FirstName Char(50) NOT NULL,
LastName Char(50) NOT NULL,
Address Char(35) NOT NULL,
Birthday date NOT NULL,
PhoneNumber Char(15) NOT NULL,
PRIMARY KEY(PersonID)
)AUTO_INCREMENT=0;

DROP TABLE IF EXISTS Volunteer;
CREATE TABLE IF NOT EXISTS Volunteer (
VolunteerID INT NOT NULL AUTO_INCREMENT,
PersonID INT NOT NULL,
Skill Char(30) NOT NULL,
PRIMARY KEY(VolunteerID)
)AUTO_INCREMENT=1000;
 
DROP TABLE IF EXISTS Patient;
CREATE TABLE IF NOT EXISTS Patient (
PatientID INT NOT NULL AUTO_INCREMENT,
PersonID int NOT NULL,
ContactDate date NOT NULL,
AdmittanceDate date NOT NULL,
DischargeDate date NOT NULL,
Outpatient TINYINT NOT NULL,
PhysicianID INT NOT NULL,
HistoryID INT NOT NULL,
CareCenterID INT NOT NULL,
PRIMARY KEY(PatientID)
)AUTO_INCREMENT = 2000;

DROP TABLE IF EXISTS Outpatient;
CREATE TABLE IF NOT EXISTS Outpatient (
Outpatient TINYINT NOT NULL,
isOutpatient char(10),
PRIMARY KEY(Outpatient, isOutpatient)
);

DROP TABLE IF EXISTS Visit;
CREATE TABLE IF NOT EXISTS Visit (
VisitID INT NOT NULL AUTO_INCREMENT,
Date date NOT NULL,
Comments Char(30) NOT NULL,
PatientID INT NOT NULL,
PhysicianID INT NOT NULL,
PRIMARY KEY(VisitID)
)AUTO_INCREMENT=3000;

DROP TABLE IF EXISTS StayHistory;
CREATE TABLE IF NOT EXISTS StayHistory (
HistoryID INT NOT NULL AUTO_INCREMENT,
DateIn date NOT NULL,
DateOut date NOT NULL,
PatientID INT NOT NULL,
PhysicianID INT NOT NULL,
PRIMARY KEY(HistoryID)
)AUTO_INCREMENT=4000;

DROP TABLE IF EXISTS PhysicianPatients;
CREATE TABLE IF NOT EXISTS PhysicianPatients (
PatientID INT NOT NULL,
PhysicianID INT NOT NULL,
PRIMARY KEY(PatientID, PhysicianID)
);

DROP TABLE IF EXISTS Physician;
CREATE TABLE IF NOT EXISTS Physician (
PhysicianID INT NOT NULL AUTO_INCREMENT,
Specialty Char(20) NOT NULL,
PagerNumber INT NOT NULL,
PersonID INT NOT NULL,
PRIMARY KEY(PhysicianID)
)AUTO_INCREMENT=5000;

DROP TABLE IF EXISTS Employee;
CREATE TABLE IF NOT EXISTS Employee (
EmployeeID int NOT NULL AUTO_INCREMENT,
EmployeeTypes Char(50) NOT NULL,
CareCenterID INT NOT NULL,
PersonID INT NOT NULL,
PRIMARY KEY(EmployeeID)
)AUTO_INCREMENT = 6000;

DROP TABLE IF EXISTS Nurse;
CREATE TABLE IF NOT EXISTS Nurse (
NurseID INT NOT NULL AUTO_INCREMENT,
Certificate Char(30) NOT NULL,
EmployeeID INT NOT NULL,
PRIMARY KEY(NurseID)
)AUTO_INCREMENT=7000;

DROP TABLE IF EXISTS Technician;
CREATE TABLE IF NOT EXISTS Technician (
TechnicianID INT NOT NULL AUTO_INCREMENT,
EmployeeID INT NOT NULL,
Skill Char(25) NOT NULL,
PRIMARY KEY(TechnicianID)
)AUTO_INCREMENT=9000;

DROP TABLE IF EXISTS Labratory;
CREATE TABLE IF NOT EXISTS Labratory (
LabratoryID INT NOT NULL AUTO_INCREMENT, 
LabratoryName Char(30)NOT NULL,
LabratoryLocation Char(30)NOT NULL,
TechnicianID INT NOT NULL,
PRIMARY KEY(LabratoryID)
)AUTO_INCREMENT=10000;

DROP TABLE IF EXISTS LabTechs;
CREATE TABLE IF NOT EXISTS LabTechs (
LabratoryID INT NOT NULL,
TechnicianID INT NOT NULL,
PRIMARY KEY (LabratoryID, TechnicianID)
);

DROP TABLE IF EXISTS CareCenter;
CREATE TABLE IF NOT EXISTS CareCenter (
CareCenterID INT NOT NULL AUTO_INCREMENT, 
CareCenterName Char(30)NOT NULL,
CareCenterLocation Char(30)NOT NULL,
NurseIDInCharge INT NOT NULL,
PRIMARY KEY(CarecenterID)
)AUTO_INCREMENT=11000;

DROP TABLE IF EXISTS CareCenterNurse;
CREATE TABLE IF NOT EXISTS CareCenterNurse (
NurseID INT NOT NULL,
CareCenterID INT NOT NULL,
PRIMARY KEY (NurseID, CareCenterID)
);

DROP TABLE IF EXISTS CareCenterPhysician;
CREATE TABLE IF NOT EXISTS CareCenterPhysician (
PhysicianID INT NOT NULL,
CareCenterID INT NOT NULL,
PRIMARY KEY (PhysicianID, CareCenterID)
);


DROP TABLE IF EXISTS ClinicRecords;
CREATE TABLE IF NOT EXISTS ClinicRecords(
DateStart DATE NOT NULL,
DateEnd DATE NOT NULL,
EmployeeHours INT NOT NULL,
EmployeeID INT NOT NULL,
CareCenterID INT NOT NULL,
LabratoryID INT
);


DROP TABLE IF EXISTS Bed;
CREATE TABLE Bed (
BedID INT NOT NULL AUTO_INCREMENT, 
BedNumber INT NOT NULL, 
RoomNumber INT NOT NULL ,
CareCenterID INT NOT NULL , 
PatientID INT NOT NULL,
PRIMARY KEY(BedID)
)AUTO_INCREMENT=12000;


DROP TABLE IF EXISTS Item;
CREATE TABLE Item (
ItemID int NOT NULL AUTO_INCREMENT,
ItemName CHAR(40) NOT NULL,
ItemDescription MEDIUMTEXT NOT NULL,
ItemUnitCost FLOAT NOT NULL,
PRIMARY KEY(ItemID)
)AUTO_INCREMENT=13000;


DROP TABLE IF EXISTS Medication;
CREATE TABLE Medication (
MedID INT NOT NULL AUTO_INCREMENT,
MedName Char(40),
MedDescription MEDIUMTEXT NOT NULL,
MedUnitCost FLOAT NOT NULL,
PRIMARY KEY(MedID)
)AUTO_INCREMENT=14000;


DROP TABLE IF EXISTS Treatment;
CREATE TABLE Treatment (
TreatmentID INT NOT NULL AUTO_INCREMENT,
TreatmentDate DATE NOT NULL, 
TreatmentTime CHAR(100) NOT NULL,
PhysicianID INT NOT NULL, 
PatientID INT NOT NULL,
PRIMARY KEY(TreatmentID)
)AUTO_INCREMENT=15000;


DROP TABLE IF EXISTS TreatmentItem;
CREATE TABLE IF NOT EXISTS TreatmentItem (
TreatmentID INT NOT NULL,
ItemID INT NOT NULL,
Quantity INT NOT NULL,
PRIMARY KEY (TreatmentID, ItemID)
);


DROP TABLE IF EXISTS TreatmentMedication;
CREATE TABLE IF NOT EXISTS TreatmentMedication (
TreatmentID INT NOT NULL,
MedID INT NOT NULL,
Quantity INT NOT NULL,
PRIMARY KEY (TreatmentID, MedID)
);

DROP TABLE IF EXISTS TreatmentHistory;
CREATE TABLE IF NOT EXISTS TreatmentHistory (
HistoryID INT NOT NULL,
TreatmentID INT NOT NULL
);

ALTER TABLE Volunteer 
ADD FOREIGN KEY (PersonID) REFERENCES Person(PersonID) ON DELETE CASCADE;
ALTER TABLE Patient 
ADD FOREIGN KEY (Outpatient) REFERENCES Outpatient(Outpatient),
ADD FOREIGN KEY (PersonID) REFERENCES Person(PersonID) ON DELETE CASCADE,
ADD FOREIGN KEY (PhysicianID) REFERENCES Physician(PhysicianID) ON DELETE CASCADE,
ADD FOREIGN KEY (HistoryID ) REFERENCES Stayhistory(HistoryID) ON DELETE CASCADE,
ADD FOREIGN KEY (CareCenterID) REFERENCES CareCenter(CareCenterID) ON DELETE CASCADE;

ALTER TABLE Visit 
ADD FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
ADD FOREIGN KEY (PhysicianID) REFERENCES Physician(PhysicianID);

ALTER TABLE StayHistory
ADD FOREIGN KEY (PatientID) REFERENCES Patient(PatientID),
ADD FOREIGN KEY (PhysicianID) REFERENCES Physician(PhysicianID);

ALTER TABLE PhysicianPatients
ADD FOREIGN KEY (PatientID) REFERENCES Patient(PatientID) ON DELETE CASCADE,
ADD FOREIGN KEY (PhysicianID) REFERENCES Physician(PhysicianID) ON DELETE CASCADE;

ALTER TABLE Physician
ADD FOREIGN KEY (PersonID) REFERENCES Person(PersonID) ON DELETE CASCADE;

ALTER TABLE Employee 
ADD FOREIGN KEY (PersonID) REFERENCES Person(PersonID) ON DELETE CASCADE;

ALTER TABLE Nurse
ADD FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID) ON DELETE CASCADE;

ALTER TABLE Technician
ADD FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID) ON DELETE CASCADE;

ALTER TABLE LabTechs
ADD FOREIGN KEY (LabratoryID) REFERENCES Labratory(LabratoryID),
ADD FOREIGN KEY (TechnicianID) REFERENCES Technician(TechnicianID);


ALTER TABLE CareCenter
ADD FOREIGN KEY (NurseIDInCharge) REFERENCES Nurse(NurseID) ON DELETE CASCADE;

ALTER TABLE CareCenterNurse
ADD FOREIGN KEY (NurseID) REFERENCES Nurse(NurseID),
ADD FOREIGN KEY (CareCenterID) REFERENCES CareCenter(CareCenterID);

ALTER TABLE CareCenterPhysician
ADD FOREIGN KEY (PhysicianID) REFERENCES Physician(PhysicianID),
ADD FOREIGN KEY (CareCenterID) REFERENCES CareCenter(CareCenterID);

ALTER TABLE ClinicRecords
ADD FOREIGN KEY (CareCenterID) REFERENCES CareCenter(CareCenterID),
ADD FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
ADD FOREIGN KEY (LabratoryID) REFERENCES Labratory(LabratoryID);

ALTER TABLE BED
ADD FOREIGN KEY (CareCenterID) REFERENCES CareCenter(CareCenterID) ON DELETE CASCADE,
ADD FOREIGN KEY (PatientID) REFERENCES Patient(PatientID) ON DELETE CASCADE;

ALTER TABLE Treatment
ADD FOREIGN KEY (PatientID) REFERENCES Patient(PatientID) ON DELETE CASCADE,
ADD FOREIGN KEY (PhysicianID) REFERENCES Physician(PhysicianID) ON DELETE CASCADE;

ALTER TABLE TreatmentItem
ADD FOREIGN KEY (TreatmentID) REFERENCES Treatment(TreatmentID),
ADD FOREIGN KEY (ItemID) REFERENCES Item(ItemID);

ALTER TABLE TreatmentMedication
ADD FOREIGN KEY (TreatmentID) REFERENCES Treatment(TreatmentID),
ADD FOREIGN KEY (MedID) REFERENCES Medication(MedID);

ALTER TABLE TreatmentHistory
ADD FOREIGN KEY (TreatmentID) REFERENCES Treatment(TreatmentID),
ADD FOREIGN KEY (HistoryID ) REFERENCES Stayhistory(HistoryID) ON DELETE CASCADE;
